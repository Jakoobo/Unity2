from  pgzero.builtins import Actor
from time import time


class Gracz:
    def __init__(self, keys):
        self.images = ["obraz_gracza"] #trzeba tu wprowadzić grafiki postaci gracza
        self.keys = keys
        self.keys_active = {'right': False, 'up': False, 'left': False, 'down': False}
        self.gracz = Actor("obraz_gracza")
        self.gracz.x = 290
        self.gracz.y = 570
        self.start_position = self.gracz.x, self.gracz.y
        self.money = 100
        self.lives = 3
        
    def show_money(self):
        return self.money
        
    def current_money(self, event):    #poprawić i pobrać konkretny event
        actual_money = show_money():
        actual_money -= event
        global money
        money = actual_money
        
    def show_lives(self):
        return self.lives
        
    def current_lives(self, event):
        actual_lives = show_lives():
        actual_lives -= event
        global lives
        lives = actual_lives
        

    def on_key_down(self, key):
        if key == self.keys.RIGHT:
            self.gracz.keys_active['right'] = True
        if key == self.keys.UP:
            self.gracz.keys_active['up'] = True
        if key == self.keys.DOWN:
            self.gracz.keys_active['down'] = True
        if key == self.keys.LEFT:
            self.gracz.keys_active['left'] = True

    def on_key_up(self, key):
        if key == self.keys.RIGHT:
            self.gracz.keys_active['right'] = False
        if key == self.keys.UP:
            self.gracz.keys_active['up'] = False
        if key == self.keys.DOWN:
            self.gracz.keys_active['down'] = False
        if key == self.keys.LEFT:
            self.gracz.keys_active['left'] = False

    def draw(self, screen):
        self.gracz.draw()
        for live in range(show_lives(self)):
            screen.blit("ikonka_zycia", (5 + live * 20, 20))
        for money in range(show_lives):
            screen.blit("poziom_pieniendzy", (5 + money * 1, 40)) #*1 bo to jest prosty pasek o wymarach 1x20
       

    def move_pressed(self):
        pressed = any(value for value in self.keys_active.values())
        return pressed

    def update(self):
        can_move = check_move_point(self.gracz)
        if not can_move:
            return

        #Animacja postaci
        
        postac_lewo = "ninja_left.jpg"
        postac_prawo = "ninj_right.jpg"

# gracz.angle to jest kąt nachylenia gracza
        if self.keys_active['right']:
            self.gracz.x += 1
            self.gracz.image = postac_prawo
            self.gracz.angle = 0
        if self.keys_active['up']:
            self.gracz.y -= 1
            self.gracz.image = postac_prosto
            self.gracz.angle = 90
        if self.keys_active['left']:
            self.gracz.x -= 1
            self.gracz.image = postac_lewo
            self.gracz.angle = 180
        if self.keys_active['down']:
            self.gracz.y += 1
            self.gracz.image = postac_prosto
            self.gracz.angle = 270
